server:
  port: 8080
spring:
  application:
    name: api_zuul_server
  redis:
    host: 127.0.0.1
    port: 6379
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/security_demo?useUnicode=yes&characterEncoding=UTF-8&useSSL=false
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
zuul:
  routes:
    #    product-server: #这个可以随便写
    #      path: /product-service/**
    #      #通过url的方式可以不用走注册中心
    #      #      url: http://127.0.0.1:9001  #映射路径对应的实际微服务url地址,
    #       列如访问http://localhost:8080/product-service/product/1就能正常访问商品服务
    #      #通过服务id的方式就可以通过注册中心获取对应服务id的url，可以避免url频繁变更修改
    #      service-id: product-service #这个表示需要路由到的服务id，这里一定要写真实的
    #    以上的两种方式还可以使用下面的方式将会简化，直接通过服务id：路径
    product-server: /api-product/**
    #      service-id: product-server
    order-server: /api-order/**
    auth-server: /api-auth/**


#配置eureka注册中心地址
eureka:
  client:
    service-url:
#      defaultZone: http://localhost:9000/eureka/,http://localhost:8000/eureka/ 多节点模式
      defaultZone: http://localhost:9000/eureka/
  instance:
    prefer-ip-address: true #使用IP地址注册

security:
  oauth2:
    # OAuth2 Client 配置，对应 OAuth2ClientProperties 类
    client:
      client-id: test
      client-secret: test
      # 访问令牌获取 URL，自定义的
      access-token-uri: http://127.0.0.1:8090/oauth/token # 获取访问令牌的地址
      user-authorization-uri: http://127.0.0.1:8090/oauth/authorize # 获取用户的授权码地址
    # OAuth2 Resource 配置，对应 ResourceServerProperties 类
    resource:
      token-info-uri: http://127.0.0.1:8090/oauth/check_token # 校验访问令牌是否有效的地址
